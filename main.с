#include "stm32f10x.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_rcc.h"

void delay1(void);
void delay2(void);


int main(void)
{
	GPIO_InitTypeDef  GPIO_InitStructure;
  // Активируем часы порта С
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
	// Активируем  GPIO_Pin_13 для аутпута
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_Init(GPIOC, &GPIO_InitStructure);

  GPIO_ResetBits(GPIOC, GPIO_Pin_13); // Set C13 to Low level ("0")
	
	// Активируем таймер порта
   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
	// Активриуем  PB0  инпут

  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
   
  while (1) {

	if (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_0) != 0) {
    	
			GPIO_SetBits(GPIOC, GPIO_Pin_13);
    	delay1();
    	
    	GPIO_ResetBits(GPIOC, GPIO_Pin_13);
    	 delay1();
    }
    else {
			GPIO_SetBits(GPIOC, GPIO_Pin_13);
			delay2();

    	GPIO_ResetBits(GPIOC, GPIO_Pin_13);
			delay2();
    	}
  }
}


void delay1(void)
{ 
	int i;
	/* задержка только для первого шага*/
    	for(i=0;i<0x080000;i++)
	;
}

void delay2(void)
{
	 int i;
	/*задержка только для первого шага*/
    	for(i=0;i<0x200000;i++)
	;
}